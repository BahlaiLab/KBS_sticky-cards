old <- insects[which(insects21$CARD=="Old21"),]
#subset by card type
new <- insects21[which(insects21$CARD=="New21"),]
old <- insects21[which(insects21$CARD=="Old21"),]
#calculate mean and SE richness and abundance of each card pooled by rep
insects.abun <- rowSums(new[,5:29])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,5:29]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,5:29])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,5:29]>0)
old$richness <- insects.rowsums
mean(new$abundance) #220.84
sd(new$abundance)/sqrt(10) #67.86
mean(new$richness) #6.65
sd(new$richness)/sqrt(10) #0.68
mean(old$abundance) #187.85
sd(old$abundance)/sqrt(10) #57.00
mean(old$richness) #6.64
sd(old$richness)/sqrt(10) #0.73
#counts from each individual card -- calculated before cards were pooled across reps
mean(new$abundance) #43.41
#To obtain richness counts
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain richness counts
insects.rowsums <- rowSums(insects21[,5:29]>0)
insects21$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects21[,5:29])
insects21$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects21[,5:29])
insects21$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects21[,5:29]))
insects21$evenness <- evenness
###
#Generalized linear models
library(lme4)
library(lmerTest) #to obtain p values
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
library(emmeans)
#bring in data
insects_all <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/all%20years_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects_all$week <- as.character(insects_all$week)
#change CARD, TREAT, and STATION to factor
insects_all$CARD <- as.factor(insects_all$CARD)
insects_all$TREAT <- as.factor(insects_all$TREAT)
insects_all$STATION <- as.factor(insects_all$STATION)
str(insects_all)
summary(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,30)]
View(insects21)
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24
View(insects_all)
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#Create matrix of environmental variables
env.matrix<-insects21[c(1:4,30)]
#create matrix of community variables
com.matrix<-insects21[c(5:29)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#Create matrix of environmental variables
env.matrix<-insects_all[c(2:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(6:9,11:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(com.matrix)
#first need to get rid of any rows that sum to zero
insects.abun <- rowSums(insects_all[,5:23])
insects_all$abundance <- insects.abun
View(insects_all)
#then remove rows = zero
insects_all[rowSums(insects_all[])>0,]
#then remove rows = zero
insects_all[rowSums(insects_all[,5:23])>0,]
View(insects_all)
insects_all[rowSums(abs(insects_all)) != 0,]
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,5:23])
insects_all$abundance <- insects.abun
View(insects_all)
#then remove rows = zero
insects_all[rowSums(insects_all[25])>0,]
View(insects_all)
summary(insects_all)
str(insects_all)
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[25])>0,]
View(insects_all_nonzero)
str(insects_all_nonzero)
#Create matrix of environmental variables
env.matrix<-insects_all_nonzero[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all_nonzero[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis2(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis2(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#NMDS visualization
plot(NMDS, disp='sites', type="n")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
#NMDS visualization
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library (pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
insects_all <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/all%20years_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects_all$week <- as.character(insects_all$week)
#change CARD, TREAT, and STATION to factor
insects_all$CARDYEAR <- as.factor(insects_all$CARDYEAR)
insects_all$CARD <- as.factor(insects_all$CARD)
insects_all$TREAT <- as.factor(insects_all$TREAT)
insects_all$STATION <- as.factor(insects_all$STATION)
str(insects_all)
summary(insects_all)
library (vegan)
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[26])>0,]
str(insects_all_nonzero)
#NMDS of insect community between card types
library (vegan)
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[26])>0,]
str(insects_all_nonzero)
#Create matrix of environmental variables
env.matrix<-insects_all_nonzero[c(1:5,25)]
#create matrix of community variables
com.matrix<-insects_all_nonzero[c(6:24)]
pairwise.adonis(com.matrix, env.matrix$CARD)
pairwise.adonis(com.matrix, env.matrix$CARDYEAR)
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.20 (.198)
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=19, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=17, col="#00c690")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
NMDS
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=19, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=17, col="#00c690")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73", "#ffba21","#00c690"), cex=1.2, legend=c("2021 Old cards", "2021 New cards", "2020 Old cards", "2022 New cards"))
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=16, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=10, col="#00c690")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73", "#ffba21","#00c690"), cex=1.2, legend=c("2021 Old cards", "2021 New cards", "2020 Old cards", "2022 New cards"))
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=10, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=12, col="#00c690")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=12, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=15, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=20, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=15, col="#00c690")
#bring in data
insects_all <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/all%20years_LTER_for_analyses.csv", na.strings = NULL)
insects_all$week <- as.character(insects_all$week)
#change CARD, TREAT, and STATION to factor
insects_all$CARDYEAR <- as.factor(insects_all$CARDYEAR)
insects_all$CARD <- as.factor(insects_all$CARD)
insects_all$TREAT <- as.factor(insects_all$TREAT)
insects_all$STATION <- as.factor(insects_all$STATION)
str(insects_all)
summary(insects_all)
insects.rowsums <- rowSums(insects_all[,6:24]>0)
insects_all$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects_all[,6:24])
#NMDS of insect community between card types
library (vegan)
insects.rowsums <- rowSums(insects_all[,6:24]>0)
insects_all$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects_all[,6:24])
insects_all$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects_all[,6:24]))
insects_all$evenness <- evenness
View(insects_all)
library(lme4)
library(lmerTest) #to obtain p values
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
library(emmeans)
#richness
#AIC 1183
richness.model<-glm(richness ~ CARDYEAR + week + TREAT + offset(TRAPS), data=insects_all)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARDYEAR)
rich.emm
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARDYEAR) # way to visualize outliers
#check assumptions
dotchart(insects_all$richness, main = "richness", group = insects_all$CARDYEAR) # way to visualize outliers
AIC(richness.model)
#abundance
##AIC 3574
abundance.model<-glm(abundance ~ CARDYEAR + week + TREAT + offset(TRAPS), data=insects_all)
#abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = negative.binomial (4))
#abundance.model<-glm(abundance ~ CARD + week + TREAT + offset(TRAPS), data=insects)  #does not meet normality assumptions
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARDYEAR)
abun.emm
#check assumptions
dotchart(insects_all$abundance, main = "abundance", group = insects_all$CARDYEAR) # way to visualize outliers
#diversity
##AIC 151
diversity.model<-glm(diversity ~ CARDYEAR + week + TREAT + offset(TRAPS), data=insects_all)
#diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects) #no sig diff btw cards #AIC = 116
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARDYEAR)
div.emm
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARDYEAR + week + TREAT + offset(TRAPS), data=insects)
#evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = poisson)
summary(evenness.model)
#evenness
##AIC -52
evenness.model<-glm(evenness ~ CARDYEAR + week + TREAT + offset(TRAPS), data=insects_all)
#evenness.model<-glm(evenness ~ CARD + week + TREAT + offset(TRAPS), data=insects, family = poisson)
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARDYEAR)
even.emm
AIC(evenness.model)
#CARDYEAR richness
richness.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = richness, fill=Site))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="Sites:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
richness.plot.d
richness.plot
#CARDYEAR richness
richness.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = richness, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
richness.plot
#CARDYEAR abundance
abundance.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = abundance, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Abundance")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
abundance.plot
#CARDYEAR abundance
abundance.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = abundance, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Abundance")+
scale_y_continuous(trans="log10")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
abundance.plot
#CARDYEAR diveristy by card type
diversity.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = diversity, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
diversity.plot
#CARDYEAR evenness by card type
evenness.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = evenness, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Evenness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#B2DF8A","#FDBF6F","#33A02C","#FB9A99"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
evenness.plot
abundance.plot
#
#mush together plots
library(ggpubr)
allyears_boxplot <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
allyears_boxplot
#CARDYEAR richness by card type
richness.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = richness, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Richness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#ffba21","#E69F00","#009E73","#00c690"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
richness.plot
#CARDYEAR abundance by card type
abundance.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = abundance, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Abundance (log10)")+
scale_y_continuous(trans="log10")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#ffba21","#E69F00","#009E73","#00c690"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
abundance.plot
#CARDYEAR diveristy by card type
diversity.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = diversity, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Shannon diversity")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#ffba21","#E69F00","#009E73","#00c690"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
diversity.plot
#CARDYEAR evenness by card type
evenness.plot<-ggplot(insects_all, aes(x = factor(CARD,level = c("Old","New")), y = evenness, fill=CARDYEAR))+
geom_boxplot()+
theme_bw()+
theme(legend.position="bottom")+
labs(title="", x="", y="Evenness")+
#theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#ffba21","#E69F00","#009E73","#00c690"),name="CARDYEAR:",
breaks=c("Old20", "Old21", "New21", "New22"),
labels=c("Old cards 2020", "Old cards 2021", "New cards 2021", "New cards 2022"))
evenness.plot
#
#mush together plots
library(ggpubr)
allyears_boxplot <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
allyears_boxplot
pdf("allyears_boxplot.pdf", height=8, width=8) #height and width in inches
allyears_boxplot
dev.off()

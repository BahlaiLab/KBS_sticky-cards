cumLCW<-c(cumLCW, bugcount)
}
#MECOP
cumMECOP<-c()
for(i in 1:length(KBS22$MECOP)){
if (KBS22$is.collected[i]=="no"){
bugcount<-KBS22$MECOP[i]
}else{
bugcount<-KBS22$MECOP[i]+ KBS22$MECOP[i-1]
}
cumMECOP<-c(cumMECOP, bugcount)
}
#X20SPOT
cumX20SPOT<-c()
for(i in 1:length(KBS22$X20SPOT)){
if (KBS22$is.collected[i]=="no"){
bugcount<-KBS22$X20SPOT[i]
}else{
bugcount<-KBS22$X20SPOT[i]+ KBS22$X20SPOT[i-1]
}
cumX20SPOT<-c(cumX20SPOT, bugcount)
}
View(KBS22)
#OTHER
cumOTHER<-c()
for(i in 1:length(KBS22$OTHER)){
if (KBS22$is.collected[i]=="no"){
bugcount<-KBS22$OTHER[i]
}else{
bugcount<-KBS22$OTHER[i]+ KBS22$OTHER[i-1]
}
cumOTHER<-c(cumOTHER, bugcount)
}
#put cumulative counts into dataframe
KBS22_cum<-cbind(KBS22, cumABIPN, cumBURSI, cumC7, cumCMAC, cumCSTIG, cumCTRIF,
cumCYCSP, cumH13, cumHAXY, cumHCONV, cumHGLAC, cumHPARN, cumHVAR,
cumPQUA, cumCANTHARID, cumLAMPY, cumLCW, cumMECOP, cumX20SPOT, cumOTHER)
#just want "yes" lines because those show cumulative amounts
KBS22_cum_final <- KBS22_cum[which(KBS22_cum$is.collected=="yes"),]
#print data into csv file
write.csv(KBS22_cum_final, file="2022_LTER_cumulative.csv", row.names=FALSE)
#print data into csv file
write.csv(KBS22_cum_final, file="2022_LTER_cumulative.csv", row.names=FALSE)
#after deleting non-cumulative counts, and adding in the data that only had one week for a card,
#add the cumulative count data file back in to reorder again for matching
KBS22_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_cumulative%202.0.csv", na.strings = NULL)
#reorder
KBS22_cum_final_2.0<-KBS22_cum_final_2.0[order(KBS22_cum_final_2.0$TREAT, KBS22_cum_final_2.0$REP, KBS22_cum_final_2.0$STATION, KBS22_cum_final_2.0$DOY),]
str(KBS22_cum_final_2.0)
#print data into final csv file
write.csv(KBS22_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)
#after deleting non-cumulative counts, and adding in the data that only had one week for a card,
#add the cumulative count data file back in to reorder again for matching
KBS22_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_cumulative%202.0.csv", na.strings = NULL)
#reorder
KBS22_cum_final_2.0<-KBS22_cum_final_2.0[order(KBS22_cum_final_2.0$TREAT, KBS22_cum_final_2.0$REP, KBS22_cum_final_2.0$STATION, KBS22_cum_final_2.0$DOY),]
str(KBS22_cum_final_2.0)
#print data into final csv file
write.csv(KBS22_cum_final_2.0, file="2022_LTER_final.csv", row.names=FALSE)
#bring in data set of all KBS field data with week and DOY already attached
#also contains column "is.collected" --> no = not the week collected, yes = card collected
#note this data had the june 10th data from treatments 1 and 4 removed because those cards only have one entry
#this data will come back after the accumulation loop
KBS <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER.csv", na.strings = NULL)
#bring in data set of all KBS field data with week and DOY already attached
#also contains column "is.collected" --> no = not the week collected, yes = card collected
#note this data had the june 10th data from treatments 1 and 4 removed because those cards only have one entry
#this data will come back after the accumulation loop
KBS21 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER.csv", na.strings = NULL)
#change Rep and Station to characters
KBS21$REP <- as.character(KBS21$REP)
KBS21$STATION <- as.character(KBS21$STATION)
#change order of data set
KBS21<-KBS21[order(KBS21$TREAT, KBS21$REP, KBS21$STATION, KBS21$DOY),]
str(KBS21)
#need to perform this code for each species
#starting with ABIPN
cumABIPN<-c()
for(i in 1:length(KBS21$ABIPN)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$ABIPN[i]
}else{
bugcount<-KBS21$ABIPN[i]+ KBS21$ABIPN[i-1]
}
cumABIPN<-c(cumABIPN, bugcount)
}
#BURSI
cumBURSI<-c()
for(i in 1:length(KBS21$BURSI)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$BURSI[i]
}else{
bugcount<-KBS21$BURSI[i]+ KBS21$BURSI[i-1]
}
cumBURSI<-c(cumBURSI, bugcount)
}
#C7
cumC7<-c()
for(i in 1:length(KBS21$C7)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$C7[i]
}else{
bugcount<-KBS21$C7[i]+ KBS21$C7[i-1]
}
cumC7<-c(cumC7, bugcount)
}
#CMAC
cumCMAC<-c()
for(i in 1:length(KBS21$CMAC)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$CMAC[i]
}else{
bugcount<-KBS21$CMAC[i]+ KBS21$CMAC[i-1]
}
cumCMAC<-c(cumCMAC, bugcount)
}
#CSTIG
cumCSTIG<-c()
for(i in 1:length(KBS21$CSTIG)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$CSTIG[i]
}else{
bugcount<-KBS21$CSTIG[i]+ KBS21$CSTIG[i-1]
}
cumCSTIG<-c(cumCSTIG, bugcount)
}
#CTRIF
cumCTRIF<-c()
for(i in 1:length(KBS21$CTRIF)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$CTRIF[i]
}else{
bugcount<-KBS21$CTRIF[i]+ KBS21$CTRIF[i-1]
}
cumCTRIF<-c(cumCTRIF, bugcount)
}
#CYCSP
cumCYCSP<-c()
for(i in 1:length(KBS21$CYCSP)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$CYCSP[i]
}else{
bugcount<-KBS21$CYCSP[i]+ KBS21$CYCSP[i-1]
}
cumCYCSP<-c(cumCYCSP, bugcount)
}
#H13
cumH13<-c()
for(i in 1:length(KBS21$H13)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$H13[i]
}else{
bugcount<-KBS21$H13[i]+ KBS21$H13[i-1]
}
cumH13<-c(cumH13, bugcount)
}
#HAXY
cumHAXY<-c()
for(i in 1:length(KBS21$HAXY)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$HAXY[i]
}else{
bugcount<-KBS21$HAXY[i]+ KBS21$HAXY[i-1]
}
cumHAXY<-c(cumHAXY, bugcount)
}
#HCONV
cumHCONV<-c()
for(i in 1:length(KBS21$HCONV)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$HCONV[i]
}else{
bugcount<-KBS21$HCONV[i]+ KBS21$HCONV[i-1]
}
cumHCONV<-c(cumHCONV, bugcount)
}
#HGLAC
cumHGLAC<-c()
for(i in 1:length(KBS21$HGLAC)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$HGLAC[i]
}else{
bugcount<-KBS21$HGLAC[i]+ KBS21$HGLAC[i-1]
}
cumHGLAC<-c(cumHGLAC, bugcount)
}
#HPARN
cumHPARN<-c()
for(i in 1:length(KBS21$HPARN)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$HPARN[i]
}else{
bugcount<-KBS21$HPARN[i]+ KBS21$HPARN[i-1]
}
cumHPARN<-c(cumHPARN, bugcount)
}
#HVAR
cumHVAR<-c()
for(i in 1:length(KBS21$HVAR)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$HVAR[i]
}else{
bugcount<-KBS21$HVAR[i]+ KBS21$HVAR[i-1]
}
cumHVAR<-c(cumHVAR, bugcount)
}
#PQUA
cumPQUA<-c()
for(i in 1:length(KBS21$PQUA)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$PQUA[i]
}else{
bugcount<-KBS21$PQUA[i]+ KBS21$PQUA[i-1]
}
cumPQUA<-c(cumPQUA, bugcount)
}
#CANTHARID
cumCANTHARID<-c()
for(i in 1:length(KBS21$CANTHARID)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$CANTHARID[i]
}else{
bugcount<-KBS21$CANTHARID[i]+ KBS21$CANTHARID[i-1]
}
cumCANTHARID<-c(cumCANTHARID, bugcount)
}
#LAMPY
cumLAMPY<-c()
for(i in 1:length(KBS21$LAMPY)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$LAMPY[i]
}else{
bugcount<-KBS21$LAMPY[i]+ KBS21$LAMPY[i-1]
}
cumLAMPY<-c(cumLAMPY, bugcount)
}
#LCW
cumLCW<-c()
for(i in 1:length(KBS21$LCW)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$LCW[i]
}else{
bugcount<-KBS21$LCW[i]+ KBS21$LCW[i-1]
}
cumLCW<-c(cumLCW, bugcount)
}
#MECOP
cumMECOP<-c()
for(i in 1:length(KBS21$MECOP)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$MECOP[i]
}else{
bugcount<-KBS21$MECOP[i]+ KBS21$MECOP[i-1]
}
cumMECOP<-c(cumMECOP, bugcount)
}
#X20SPOT
cumX20SPOT<-c()
for(i in 1:length(KBS21$X20SPOT)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$X20SPOT[i]
}else{
bugcount<-KBS21$X20SPOT[i]+ KBS21$X20SPOT[i-1]
}
cumX20SPOT<-c(cumX20SPOT, bugcount)
}
#OTHER
cumOTHER<-c()
for(i in 1:length(KBS21$OTHER)){
if (KBS21$is.collected[i]=="no"){
bugcount<-KBS21$OTHER[i]
}else{
bugcount<-KBS21$OTHER[i]+ KBS21$OTHER[i-1]
}
cumOTHER<-c(cumOTHER, bugcount)
}
#put cumulative counts into dataframe
KBS21_cum<-cbind(KBS21, cumABIPN, cumBURSI, cumC7, cumCMAC, cumCSTIG, cumCTRIF,
cumCYCSP, cumH13, cumHAXY, cumHCONV, cumHGLAC, cumHPARN, cumHVAR,
cumPQUA, cumCANTHARID, cumLAMPY, cumLCW, cumMECOP, cumX20SPOT, cumOTHER)
#just want "yes" lines because those show cumulative amounts
KBS21_cum_final <- KBS21_cum[which(KBS21_cum$is.collected=="yes"),]
#after deleting non-cumulative counts, and adding in the data from treatments 1 and 4 from june 10th,
#add the cumulative count data file back in to reorder again for matching
KBS21_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER_cumulative%202.0.csv", na.strings = NULL)
#after deleting non-cumulative counts, and adding in the data from treatments 1 and 4 from june 10th,
#add the cumulative count data file back in to reorder again for matching
KBS21_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER_cumulative%202.0.csv", na.strings = NULL)
#reorder
KBS21_cum_final_2.0<-KBS21_cum_final_2.0[order(KBS21_cum_final_2.0$TREAT, KBS21_cum_final_2.0$REP, KBS21_cum_final_2.0$STATION, KBS21_cum_final_2.0$DOY),]
str(KBS21_cum_final_2.0)
#print data into csv file
write.csv(KBS_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)
#print data into csv file
write.csv(KBS21_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)
#after deleting non-cumulative counts, and adding in the data that only had one week for a card,
#add the cumulative count data file back in to reorder again for matching
KBS20_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_cumulative%202.0.csv", na.strings = NULL)
#reorder
KBS20_cum_final_2.0<-KBS20_cum_final_2.0[order(KBS20_cum_final_2.0$TREAT, KBS20_cum_final_2.0$REP, KBS20_cum_final_2.0$STATION, KBS20_cum_final_2.0$DOY),]
str(KBS20_cum_final_2.0)
#print data into FINAL csv file
write.csv(KBS20_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)
#print data into FINAL csv file
write.csv(KBS20_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)
#print data into FINAL csv file
write.csv(KBS20_cum_final_2.0, file="2020_LTER_final.csv", row.names=FALSE)
#okay not quite done
#bring in final data file
combined20 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_final.csv", na.strings = NULL)
#change week to characters
combined20$week <- as.character(combined20$week)
#change CARD, TREAT, REP, and STATION to factor
combined20$CARD <- as.factor(combined20$CARD)
combined20$TREAT <- as.factor(combined20$TREAT)
combined20$REP <- as.factor(combined20$REP)
combined20$STATION <- as.factor(combined20$STATION)
str(combined20)
summary(combined20)
#okay not quite done
#bring in final data file
combined20 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_final.csv", na.strings = NULL)
#change week to characters
combined20$week <- as.character(combined20$week)
#change CARD, TREAT, REP, and STATION to factor
combined20$CARD <- as.factor(combined20$CARD)
combined20$TREAT <- as.factor(combined20$TREAT)
combined20$REP <- as.factor(combined20$REP)
combined20$STATION <- as.factor(combined20$STATION)
str(combined20)
summary(combined20)
#remove rows with NAs
combined.na20 <- na.omit(combined20)
#Melt into long format to pool across reps
library (reshape2)
combined.long20 <- melt(combined.na20, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep20<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N20<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
View(insects_rep20)
View(insects_rep_N20)
View(insects_rep20)
View(insects_rep_N20)
View(insects_rep20)
#change variable name to reflect that it's number of traps
insects_rep_N20<-rename(insects_rep_N20, TRAPS=SumOfADULTS)
View(insects_rep_N20)
View(insects_rep20)
View(insects_rep_N20)
#null out SPID column
insects_rep_N20$SPID<-NULL
View(insects_rep_N20)
#create new dataframe that's just the number of traps
insects_traps20<-insects_rep_N20[!duplicated(insects_rep_N20), ]
View(insects_traps20)
View(insects_rep_N20)
View(insects_traps20)
View(insects_rep20)
#pool across reps and put back into wide format
insect20 <-dcast(insects_rep20, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
View(insects_rep20)
View(insect20)
#merge "traps" with "insects"
insects20 <- merge(insect20, insects_traps20, all.x=TRUE)
View(insects20)
View(insects20)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects20, file="2020_LTER_for_analyses.csv", row.names=FALSE)
#bring in final data file of everything combined
#LTER (2021_LTER_final) + Bahlai (2021_Bahlai_reordered)
combined21 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
combined21$week <- as.character(combined21$week)
#change CARD, TREAT, REP, and STATION to factor
combined21$CARD <- as.factor(combined21$CARD)
combined21$TREAT <- as.factor(combined21$TREAT)
combined21$REP <- as.factor(combined21$REP)
combined21$STATION <- as.factor(combined21$STATION)
str(combined21)
summary(combined21)
#remove rows with NAs (missing data from either LTER or Bahlai)
combined.na21 <- na.omit(combined21)
#Melt into long format to pool across reps
library (reshape2)
combined.long21 <- melt(combined.na21, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep21<-aggregate(data=combined.long21, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N21<-aggregate(data=combined.long21, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N21<-rename(insects_rep_N21, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N21$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps21<-insects_rep_N21[!duplicated(insects_rep_N21), ]
#pool across reps and put back into wide format
insect21 <-dcast(insects_rep21, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects21 <- merge(insect21, insects_traps21, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects21, file="2021_LTER_for_analyses.csv", row.names=FALSE)
#okay not quite done
#bring in final data file
combined22 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_final.csv", na.strings = NULL)
#change week to characters
combined22$week <- as.character(combined22$week)
#change CARD, TREAT, REP, and STATION to factor
combined22$CARD <- as.factor(combined22$CARD)
combined22$TREAT <- as.factor(combined22$TREAT)
combined22$REP <- as.factor(combined22$REP)
combined22$STATION <- as.factor(combined22$STATION)
str(combined22)
summary(combined20)
#remove rows with NAs
combined.na22 <- na.omit(combined22)
#Melt into long format to pool across reps
library (reshape2)
combined.long22 <- melt(combined.na22, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep22<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N22<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N22<-rename(insects_rep_N22, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N22$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps22<-insects_rep_N22[!duplicated(insects_rep_N22), ]
#pool across reps and put back into wide format
insect22 <-dcast(insects_rep22, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects22 <- merge(insect22, insects_traps22, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects22, file="2022_LTER_for_analyses.csv", row.names=FALSE)
str(combined22)
combined22 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_final.csv", na.strings = NULL)
#change week to characters
combined22$week <- as.character(combined22$week)
#change CARD, TREAT, REP, and STATION to factor
combined22$CARD <- as.factor(combined22$CARD)
combined22$TREAT <- as.factor(combined22$TREAT)
combined22$REP <- as.factor(combined22$REP)
combined22$STATION <- as.factor(combined22$STATION)
str(combined22)
summary(combined22)
#remove rows with NAs
combined.na22 <- na.omit(combined22)
combined.long22 <- melt(combined.na22, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep22<-aggregate(data=combined.long22, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N22<-aggregate(data=combined.long22, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N22<-rename(insects_rep_N22, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N22$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps22<-insects_rep_N22[!duplicated(insects_rep_N22), ]
#pool across reps and put back into wide format
insect22 <-dcast(insects_rep22, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects22 <- merge(insect22, insects_traps22, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects22, file="2022_LTER_for_analyses.csv", row.names=FALSE)
#bring in data
insects20 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_for_analyses.csv", na.strings = NULL)
str(insects20)
#change week to characters
insects20$week <- as.character(insects20$week)
#change CARD, TREAT, REP, and STATION to factor
insects20$CARD <- as.factor(insects20$CARD)
insects20$TREAT <- as.factor(insects20$TREAT)
insects20$REP <- as.factor(cinsects20$REP)
insects20$STATION <- as.factor(insects20$STATION)
str(insects20)
insects20$REP <- as.factor(insects20$REP)
insects20$REP <- as.factor(insects20$REP)
#bring in data
insects20 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_for_analyses.csv", na.strings = NULL)
View(insects20)
insects20$week <- as.character(insects20$week)
#change CARD, TREAT, REP, and STATION to factor
insects20$CARD <- as.factor(insects20$CARD)
insects20$TREAT <- as.factor(insects20$TREAT)
insects20$STATION <- as.factor(insects20$STATION)
str(insects20)
summary(insects20)
#bring in data
insects21 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects21$week <- as.character(insects21$week)
#change CARD, TREAT, and STATION to factor
insects21$CARD <- as.factor(insects21$CARD)
insects21$TREAT <- as.factor(insects21$TREAT)
insects21$STATION <- as.factor(insects21$STATION)
str(insects21)
summary(insects21)
#bring in data
insects22 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects22$week <- as.character(insects22$week)
#change CARD, TREAT, and STATION to factor
insects22$CARD <- as.factor(insects22$CARD)
insects22$TREAT <- as.factor(insects22$TREAT)
insects22$STATION <- as.factor(insects22$STATION)
str(insects22)
summary(insects22)

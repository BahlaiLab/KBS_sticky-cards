#bring in data set of all KBS field data with week and DOY already attached
#also contains column "is.collected" --> no = not the week collected, yes = card collected
#note this data had multiple lines temporarily removed because those cards only have one entry
#June 18th treatment 4, reps 1-6
#July 9th treatment 4, rep 1, stations 2-5
#August 18th treatment 6, reps 1-6
#last collection date = September 3rd
#this data will come back after the accumulation loop
KBS20 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER.csv", na.strings = NULL)
#change Rep and Station to characters
KBS20$REP <- as.character(KBS20$REP)
KBS20$STATION <- as.character(KBS20$STATION)
#change order of data set
KBS20<-KBS20[order(KBS20$TREAT, KBS20$REP, KBS20$STATION, KBS20$DOY),]
str(KBS20)
#need to perform this code for each species
#starting with ABIPN
cumABIPN<-c()
for(i in 1:length(KBS20$ABIPN)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$ABIPN[i]
}else{
bugcount<-KBS20$ABIPN[i]+ KBS20$ABIPN[i-1]
}
cumABIPN<-c(cumABIPN, bugcount)
}
#BURSI
cumBURSI<-c()
for(i in 1:length(KBS20$BURSI)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$BURSI[i]
}else{
bugcount<-KBS20$BURSI[i]+ KBS20$BURSI[i-1]
}
cumBURSI<-c(cumBURSI, bugcount)
}
#C7
cumC7<-c()
for(i in 1:length(KBS20$C7)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$C7[i]
}else{
bugcount<-KBS20$C7[i]+ KBS20$C7[i-1]
}
cumC7<-c(cumC7, bugcount)
}
#CMAC
cumCMAC<-c()
for(i in 1:length(KBS20$CMAC)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$CMAC[i]
}else{
bugcount<-KBS20$CMAC[i]+ KBS20$CMAC[i-1]
}
cumCMAC<-c(cumCMAC, bugcount)
}
#CSTIG
cumCSTIG<-c()
for(i in 1:length(KBS20$CSTIG)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$CSTIG[i]
}else{
bugcount<-KBS20$CSTIG[i]+ KBS20$CSTIG[i-1]
}
cumCSTIG<-c(cumCSTIG, bugcount)
}
#CTRIF
cumCTRIF<-c()
for(i in 1:length(KBS20$CTRIF)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$CTRIF[i]
}else{
bugcount<-KBS20$CTRIF[i]+ KBS20$CTRIF[i-1]
}
cumCTRIF<-c(cumCTRIF, bugcount)
}
#CYCSP
cumCYCSP<-c()
for(i in 1:length(KBS20$CYCSP)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$CYCSP[i]
}else{
bugcount<-KBS20$CYCSP[i]+ KBS20$CYCSP[i-1]
}
cumCYCSP<-c(cumCYCSP, bugcount)
}
#H13
cumH13<-c()
for(i in 1:length(KBS20$H13)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$H13[i]
}else{
bugcount<-KBS20$H13[i]+ KBS20$H13[i-1]
}
cumH13<-c(cumH13, bugcount)
}
#HAXY
cumHAXY<-c()
for(i in 1:length(KBS20$HAXY)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$HAXY[i]
}else{
bugcount<-KBS20$HAXY[i]+ KBS20$HAXY[i-1]
}
cumHAXY<-c(cumHAXY, bugcount)
}
#HCONV
cumHCONV<-c()
for(i in 1:length(KBS20$HCONV)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$HCONV[i]
}else{
bugcount<-KBS20$HCONV[i]+ KBS20$HCONV[i-1]
}
cumHCONV<-c(cumHCONV, bugcount)
}
#HGLAC
cumHGLAC<-c()
for(i in 1:length(KBS20$HGLAC)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$HGLAC[i]
}else{
bugcount<-KBS20$HGLAC[i]+ KBS20$HGLAC[i-1]
}
cumHGLAC<-c(cumHGLAC, bugcount)
}
#HPARN
cumHPARN<-c()
for(i in 1:length(KBS20$HPARN)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$HPARN[i]
}else{
bugcount<-KBS20$HPARN[i]+ KBS20$HPARN[i-1]
}
cumHPARN<-c(cumHPARN, bugcount)
}
#HVAR
cumHVAR<-c()
for(i in 1:length(KBS20$HVAR)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$HVAR[i]
}else{
bugcount<-KBS20$HVAR[i]+ KBS20$HVAR[i-1]
}
cumHVAR<-c(cumHVAR, bugcount)
}
#PQUA
cumPQUA<-c()
for(i in 1:length(KBS20$PQUA)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$PQUA[i]
}else{
bugcount<-KBS20$PQUA[i]+ KBS20$PQUA[i-1]
}
cumPQUA<-c(cumPQUA, bugcount)
}
#CANTHARID
cumCANTHARID<-c()
for(i in 1:length(KBS20$CANTHARID)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$CANTHARID[i]
}else{
bugcount<-KBS20$CANTHARID[i]+ KBS20$CANTHARID[i-1]
}
cumCANTHARID<-c(cumCANTHARID, bugcount)
}
#LAMPY
cumLAMPY<-c()
for(i in 1:length(KBS20$LAMPY)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$LAMPY[i]
}else{
bugcount<-KBS20$LAMPY[i]+ KBS20$LAMPY[i-1]
}
cumLAMPY<-c(cumLAMPY, bugcount)
}
#LCW
cumLCW<-c()
for(i in 1:length(KBS20$LCW)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$LCW[i]
}else{
bugcount<-KBS20$LCW[i]+ KBS20$LCW[i-1]
}
cumLCW<-c(cumLCW, bugcount)
}
#MECOP
cumMECOP<-c()
for(i in 1:length(KBS20$MECOP)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$MECOP[i]
}else{
bugcount<-KBS20$MECOP[i]+ KBS20$MECOP[i-1]
}
cumMECOP<-c(cumMECOP, bugcount)
}
#X20SPOT
cumX20SPOT<-c()
for(i in 1:length(KBS20$X20SPOT)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$X20SPOT[i]
}else{
bugcount<-KBS20$X20SPOT[i]+ KBS20$X20SPOT[i-1]
}
cumX20SPOT<-c(cumX20SPOT, bugcount)
}
#OTHER
cumOTHER<-c()
for(i in 1:length(KBS20$OTHER)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$OTHER[i]
}else{
bugcount<-KBS20$OTHER[i]+ KBS20$OTHER[i-1]
}
cumOTHER<-c(cumOTHER, bugcount)
}
#put cumulative counts into dataframe
KBS20_cum<-cbind(KBS20, cumABIPN, cumBURSI, cumC7, cumCMAC, cumCSTIG, cumCTRIF,
cumCYCSP, cumH13, cumHAXY, cumHCONV, cumHGLAC, cumHPARN, cumHVAR,
cumPQUA, cumCANTHARID, cumLAMPY, cumLCW, cumMECOP, cumX20SPOT, cumOTHER)
#just want "yes" lines because those show cumulative amounts
KBS20_cum_final <- KBS20_cum[which(KBS20_cum$is.collected=="yes"),]
#put cumulative counts into dataframe
KBS20_cum<-cbind(KBS20, cumABIPN, cumBURSI, cumC7, cumCMAC, cumCSTIG, cumCTRIF,
cumCYCSP, cumH13, cumHAXY, cumHCONV, cumHGLAC, cumHPARN, cumHVAR,
cumPQUA, cumCANTHARID, cumLAMPY, cumLCW, cumMECOP, cumX20SPOT, cumOTHER)
#OTHER
cumOTHER<-c()
for(i in 1:length(KBS20$OTHER)){
if (KBS20$is.collected[i]=="no"){
bugcount<-KBS20$OTHER[i]
}else{
bugcount<-KBS20$OTHER[i]+ KBS20$OTHER[i-1]
}
cumOTHER<-c(cumOTHER, bugcount)
}
View(KBS20)
#put cumulative counts into dataframe
KBS20_cum<-cbind(KBS20, cumABIPN, cumBURSI, cumC7, cumCMAC, cumCSTIG, cumCTRIF,
cumCYCSP, cumH13, cumHAXY, cumHCONV, cumHGLAC, cumHPARN, cumHVAR,
cumPQUA, cumCANTHARID, cumLAMPY, cumLCW, cumMECOP, cumX20SPOT)
#just want "yes" lines because those show cumulative amounts
KBS20_cum_final <- KBS20_cum[which(KBS20_cum$is.collected=="yes"),]
View(KBS20_cum)
View(KBS20_cum_final)
#print data into csv file
write.csv(KBS20_cum_final, file="2020_LTER_cumulative.csv", row.names=FALSE)
#after deleting non-cumulative counts, and adding in the data that only had one week for a card,
#add the cumulative count data file back in to reorder again for matching
KBS20_cum_final_2.0 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_cumulative%202.0.csv", na.strings = NULL)
#reorder
KBS20_cum_final_2.0<-KBS20_cum_final_2.0[order(KBS20_cum_final_2.0$TREAT, KBS20_cum_final_2.0$REP, KBS20_cum_final_2.0$STATION, KBS20_cum_final_2.0$DOY),]
str(KBS20_cum_final_2.0)
#print data into FINAL csv file
write.csv(KBS20_cum_final_2.0, file="2021_LTER_final.csv", row.names=FALSE)

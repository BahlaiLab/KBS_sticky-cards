ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.32,1.685, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.31,1.685, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.315,1.685, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.315,1.68, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
#calculate mean and SE richness and abundance of each card
insects.abun <- rowSums(new[,5:29])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,5:29]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,5:29])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,5:29]>0)
old$richness <- insects.rowsums
mean(new$abundance) #43.41
mean(new$abundance) #43.41
sd(new$abundance)/sqrt(10) #17.56
mean(new$richness) #3.52
sd(new$richness)/sqrt(10) #0.48
mean(old$abundance) #36.85
sd(old$abundance)/sqrt(10) #13.64
mean(old$richness) #3.55
sd(old$richness)/sqrt(10) #0.49
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,5:29])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,5:29])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:29]))
insects$evenness <- evenness
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT:REP, data=insects)
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT:STATION, data=insects)
summary(richness.model)
Anova (richness.model)
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
citation("car")
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT:STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#abundance
##AIC 15721
abundance.model<-lm(abundance ~ CARD + week + TREAT:STATION, data=insects)
#abundance.model<-lmer(abundance ~ CARD + (1|week) + TREAT:REP, data=insects)
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:REP), data=insects, family = negative.binomial (4))
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
View(richness.model)
View(insects)
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT:STATION, data=insects)
summary(richness.model)
Anova (richness.model)
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,5:29])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,5:29])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:29]))
insects$evenness <- evenness
Accum.1_functional <- accumcomp(com.matrix, y=env.matrix, factor='CARD',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
library (BiodiversityR)
library(ggplot2)
Accum.1_functional <- accumcomp(com.matrix, y=env.matrix, factor='CARD',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00"))+
scale_shape_manual(values=c(19,17))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "CARD", shape = "CARD")
accum
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00"))+
scale_shape_manual(values=c(19,17))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "Samples", y = "Richness", colour = "CARD", shape = "CARD")
accum
pdf("accumulation curve with pooled data.pdf", height=6, width=8) #height and width in inches
accum
dev.off()
combined <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
#combined$week <- as.character(combined$week)
#change CARD, TREAT, REP, and STATION to factor
combined$CARD <- as.factor(combined$CARD)
combined$TREAT <- as.factor(combined$TREAT)
combined$REP <- as.factor(combined$REP)
combined$STATION <- as.factor(combined$STATION)
str(combined)
summary(combined)
#remove rows with NAs (missing data from either LTER or Bahlai)
combined.na <- na.omit(combined)
library (reshape2)
combined.long <- melt(combined.na, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N<-rename(insects_rep_N, TRAPS=SumOfADULTS)
#merge trap data into insects_rep data frame
insects_merged<-merge(insects_rep, insects_rep_N)
#pool across reps and put back into wide format
insects <-dcast(insects_merged, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:4)]
#create matrix of community variables
com.matrix<-insects[c(5:29)]
View(insects)
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24 -- no convergence
NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24 -- no convergence
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New"), pch=17, col="#009E73")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$CARD))
library(pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
pairwise.adonis(com.matrix, env.matrix$CARD)
pairwise.adonis(com.matrix, env.matrix$CARD)
#subset by card type
new <- insects[which(insects$CARD=="New"),]
pairwise.adonis(com.matrix, env.matrix$CARD)
new <- insects[which(insects$CARD=="New"),]
old <- insects[which(insects$CARD=="Old"),]
#calculate mean and SE richness and abundance of each card pooled by rep
insects.abun <- rowSums(new[,5:29])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,5:29]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,5:29])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,5:29]>0)
old$richness <- insects.rowsums
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,5:29])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,5:29])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:29]))
insects$evenness <- evenness
library(lme4)
library(lmerTest) #to obtain p values
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
citation("car")
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT:STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
library(emmeans)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#richness
#AIC 5275
richness.model<-lm(richness ~ CARD + week + TREAT + STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richness.model) # check distribution of residuals
densityPlot(rstudent(richness.model)) # check density estimate of the distribution of residuals
plot(simulateResiduals(richness.model)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(richness.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richness.model)
#richness
#AIC 1179
richness.model<-lm(richness ~ CARD + week + TREAT + STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#abundance
##AIC 15721
abundance.model<-lm(abundance ~ CARD + week + TREAT:STATION, data=insects)
#abundance.model<-lmer(abundance ~ CARD + (1|week) + TREAT:REP, data=insects)
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:REP), data=insects, family = negative.binomial (4))
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#WORK ON THESE
#richness
#AIC 1179
richness.model<-lm(richness ~ CARD + week + TREAT:STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#WORK ON THESE
#richness
#AIC 1179
richness.model<-lm(richness ~ CARD + week + TREAT + STATION, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#abundance
##AIC 15721
abundance.model<-lm(abundance ~ CARD + week + TREAT:STATION, data=insects)
#abundance.model<-lmer(abundance ~ CARD + (1|week) + TREAT:REP, data=insects)
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:REP), data=insects, family = negative.binomial (4))
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
rich.emm<-emmeans(abundance.model,pairwise~CARD)
rich.emm
#abundance
##AIC 15721
abundance.model<-lm(abundance ~ CARD + week + TREAT + STATION, data=insects)
#abundance.model<-lmer(abundance ~ CARD + (1|week) + TREAT:REP, data=insects)
#abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:REP), data=insects, family = negative.binomial (4))
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
rich.emm<-emmeans(abundance.model,pairwise~CARD)
rich.emm
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#check assumptions
dotchart(insects$abundance, main = "abundance", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abundance.model) # check distribution of residuals
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(abundance.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abundance.model)
influenceIndexPlot(abundance.model, vars = c("Cook"), id = list(n = 3))
#diversity
##AIC 823
diversity.model<-lm(diversity ~ CARD + week + TREAT + STATION, data=insects)
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#diversity
##AIC 37
diversity.model<-lm(diversity ~ CARD + week + TREAT + STATION, data=insects)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abund.emm
abun.emm
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
#check assumptions
dotchart(insects$diversity, main = "diversity", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(diversity)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(diversity ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(diversity.model) # check distribution of residuals
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
densityPlot(rstudent(diversity.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(diversity.model)
influenceIndexPlot(diversity.model, vars = c("Cook"), id = list(n = 3))
#evenness
##AIC
evenness.model<-lm(evenness ~ CARD + week + TREAT + STATION, data=insects)
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(eveness.model,pairwise~CARD)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
#check assumptions
dotchart(insects$evenness, main = "evenness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(evenness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(insects, bartlett.test(evenness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
with(insects, ad.test(evenness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
plot(evenness.model) # check distribution of residuals
plot(simulateResiduals(evenness.model)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(evenness.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(evenness.model)
influenceIndexPlot(evenness.model, vars = c("Cook"), id = list(n = 3))
View(combined.long)
View(insects_rep)
View(insects_rep_N)
View(insects_rep)
View(insects_rep_N)
View(insects_rep)
View(insects)
#abundance.model<-lmer(abundance ~ CARD + (1|week) + TREAT:STATION, data=insects)
abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:STATION), data=insects, family = negative.binomial (4))
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~CARD)
abun.emm
plot(simulateResiduals(abundance.model)) # another way to check for normality and homogeneity of variance
abundance.model<-lm(abundance ~ CARD + week + TREAT + STATION, data=insects, family = negative.binomial (4))
abundance.model<-glmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
abundance.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
richness.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(diversity.model)
Anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
#diversity
##AIC 37
diversity.model<-lm(diversity ~ CARD + week + TREAT + STATION, data=insects)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
diversity.model<-lmer(diversity ~ CARD + week + (1 | TREAT:STATION), data=insects)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~CARD)
div.emm
plot(simulateResiduals(diversity.model)) # another way to check for normality and homogeneity of variance
AIC(diversity.model)
richness.model<-lmer(richness ~ CARD + week + (1 | TREAT:STATION), data=insects)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
plot(simulateResiduals(richness.model)) # another way to check for normality and homogeneity of variance
evenness.model<-lmer(evenness ~ CARD + week + (1 | TREAT:STATION), data=insects)
summary(evenness.model)
Anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~CARD)
even.emm
plot(simulateResiduals(evenness.model)) # another way to check for normality and homogeneity of variance

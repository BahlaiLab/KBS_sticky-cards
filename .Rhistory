old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,8:32]>0)
old$richness <- insects.rowsums
mean(new$abundance) #43.44
sd(new$abundance)/sqrt(10) #17.55
mean(new$richness) #3.55
sd(new$richness)/sqrt(10) #0.48
mean(old$abundance) #36.98
sd(old$abundance)/sqrt(10) #13.67
sd(old$abundance)/sqrt(10) #13.67
mean(old$richness) #3.55
sd(old$richness)/sqrt(10) #0.49
insects.rowsums <- rowSums(insects[,8:32]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,8:32])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,8:32])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,8:32]))
insects$evenness <- evenness
#order richness
#AIC 5270
richness.model<-lm(richness ~ CARD + week + TREAT:REP, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
#results: not sig diff
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
Anova (richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~CARD)
rich.emm
Anova (richness.model)
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richness.model) # check distribution of residuals
plot(simulateResiduals(richness.model)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richness.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richness.model)
influenceIndexPlot(richness.model, vars = c("Cook"), id = list(n = 3))
#order abundance
##AIC 15755
abundance.model<-lm(abundance ~ CARD + week + TREAT:REP, data=insects)
abundance.model<-glmer(abundance ~ CARD + week + (1 | TREAT:REP), data=insects, family = negative.binomial (4))
#order abundance
##AIC 15755
abundance.model<-lm(abundance ~ CARD + week + TREAT:REP, data=insects)
summary(abundance.model)
Anova(abundance.model)
AIC(abundance.model)
#check assumptions
dotchart(insects$abundnce, main = "abundance", group = insects$CARD) # way to visualize outliers
#check assumptions
dotchart(insects$abundnce, main = "abundance", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(abundance)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(abundance ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(abundance.model) # check distribution of residuals
plot(simulateResiduals(abundance.model)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(abundance.model)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(abundance.model)
influenceIndexPlot(abundance.model, vars = c("Cook"), id = list(n = 3))
#bring in data set with all insects we IDed in the Bahlai lab
Bahlai <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_Bahlai.csv", na.strings = NULL)
#change Rep and Station to characters
Bahlai$REP <- as.character(Bahlai$REP)
Bahlai$STATION <- as.character(Bahlai$STATION)
#bring in data set with all insects we IDed in the Bahlai lab
Bahlai <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_Bahlai.csv", na.strings = NULL)
#change order of data set
Bahlai<-Bahlai[order(Bahlai$TREAT, Bahlai$REP, Bahlai$STATION, Bahlai$DOY),]
str(Bahlai)
#print into csv file
write.csv(Bahlai, file="2021_Bahlai_reordered.csv", row.names=FALSE)
#bring in data set with all insects we IDed in the Bahlai lab
Bahlai <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_Bahlai%20-%20with%20corrections.csv", na.strings = NULL)
#change order of data set
Bahlai<-Bahlai[order(Bahlai$TREAT, Bahlai$REP, Bahlai$STATION, Bahlai$DOY),]
str(Bahlai)
#print into csv file
write.csv(Bahlai, file="2021_Bahlai_reordered.csv", row.names=FALSE)
#bring in final data file of everything combined
#LTER (2021_LTER_cumulative 3.0) + Bahlai (2021_Bahlai_reordered)
insects <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change DOY and week to characters
insects$DOY <- as.character(insects$DOY)
insects$week <- as.character(insects$week)
#change CARD, TREAT, REP, and STATION to factor
insects$CARD <- as.factor(insects$CARD)
insects$TREAT <- as.factor(insects$TREAT)
insects$REP <- as.factor(insects$REP)
insects$STATION <- as.factor(insects$STATION)
str(insects)
#bring in final data file of everything combined
#LTER (2021_LTER_cumulative 3.0) + Bahlai (2021_Bahlai_reordered)
insects <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change DOY and week to characters
insects$DOY <- as.character(insects$DOY)
insects$week <- as.character(insects$week)
#change CARD, TREAT, REP, and STATION to factor
insects$CARD <- as.factor(insects$CARD)
insects$TREAT <- as.factor(insects$TREAT)
insects$REP <- as.factor(insects$REP)
insects$STATION <- as.factor(insects$STATION)
str(insects)
summary(insects)
####
#NMDS of insect community between card types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:7)]
#create matrix of community variables
com.matrix<-insects[c(8:32)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100)
#subset by card type
new <- insects[which(insects$CARD=="New"),]
old <- insects[which(insects$CARD=="Old"),]
#calculate mean and SE richness and abundance of each card
insects.abun <- rowSums(new[,8:32])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,8:32]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,8:32])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,8:32]>0)
old$richness <- insects.rowsums
mean(new$abundance) #43.44
sd(new$abundance)/sqrt(10) #17.55
mean(new$richness) #3.55
sd(new$richness)/sqrt(10) #0.48
mean(old$abundance) #36.93
sd(old$abundance)/sqrt(10) #13.65
mean(old$richness) #3.54
sd(old$richness)/sqrt(10) #0.49
insects.rowsums <- rowSums(insects[,8:32]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,8:32])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,8:32])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,8:32]))
insects$evenness <- evenness
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
library (car) #Anova (needed because of negative binomial)
citation("car")
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
#order richness
#AIC 5269
richness.model<-lm(richness ~ CARD + week + TREAT:REP, data=insects)
summary(richness.model)
Anova (richness.model)
AIC(richness.model)
#check assumptions
dotchart(insects$richness, main = "richness", group = insects$CARD) # way to visualize outliers
with(insects, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
with(insects, bartlett.test(richness ~ CARD)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richness.model) # check distribution of residuals
plot(simulateResiduals(richness.model)) # another way to check for normailty and homogeneity of variance
insects <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change DOY and week to characters
insects$DOY <- as.character(insects$DOY)
insects$week <- as.character(insects$week)
#change CARD, TREAT, REP, and STATION to factor
insects$CARD <- as.factor(insects$CARD)
insects$TREAT <- as.factor(insects$TREAT)
insects$REP <- as.factor(insects$REP)
insects$STATION <- as.factor(insects$STATION)
str(insects)
summary(insects)
#NMDS of insect community between card types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:7)]
#create matrix of community variables
com.matrix<-insects[c(8:32)]
#ordination by NMDS
### ERROR
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100)
#ordination by NMDS
### ERROR
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100)
#ordination by NMDS
### ERROR
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100)
#ordination by NMDS
library(dplyr)
com.matrix <- com.matrix %>%
filter_all(any_vars(. != 0))
### ERROR
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100)
stressplot(NMDS)
NMDS
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
#add legend
legend(1.0,1.51, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=.7, legend=c("Old cards", "New cards"))
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
str(insects)
#Create matrix of environmental variables
env.matrix<-insects[c(3:7)]
#create matrix of community variables
com.matrix<-insects[c(8:32)]
#have to get rid of any rows (samples) that have only zeros
library(dplyr)
com.matrix <- com.matrix %>%
filter_all(any_vars(. != 0))
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100)
NMDS
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
#add legend
legend(1.0,1.51, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=.7, legend=c("Old cards", "New cards"))
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$CARD))
pairwise.adonis(com.matrix, env.matrix$CARD)
library(pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
new <- insects[which(insects$CARD=="New"),]
old <- insects[which(insects$CARD=="Old"),]
#calculate mean and SE richness and abundance of each card
insects.abun <- rowSums(new[,8:32])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,8:32]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,8:32])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,8:32]>0)
old$richness <- insects.rowsums
mean(new$abundance) #43.41
sd(new$abundance)/sqrt(10) #17.56
mean(new$richness) #3.53
sd(new$richness)/sqrt(10) #0.48
mean(old$abundance) #36.85
sd(old$abundance)/sqrt(10) #13.64
mean(old$richness) #3.55
sd(old$richness)/sqrt(10) #0.49
###
#To obtain richness counts
insects.rowsums <- rowSums(insects[,8:32]>0)
insects$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects[,8:32])
insects$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects[,8:32])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,8:32]))
insects$evenness <- evenness
View(new)
View(NMDS)
View(new)
#species accumulation
library (BiodiversityR)
library(ggplot2)
#individual curves for each trap (card) type
new.com.matrix<-new[c(8:32)]
new_curve<-accumresult(new.com.matrix, method = "exact", permutations = 1000)
old.com.matrix<-old[c(8:32)]
old_curve<-accumresult(old.com.matrix, method = "exact", permutations = 1000)
#calculates species richness for each sample
specnumber(com.matrix) #ranges from 1 to 20
#calculates species richness by treatment (CARD)
specnumber(com.matrix, groups = insects$CARD) #jar=26; pitfall=21; ramp=35; sticky=31
env.matrix<-insects[c(3:7)]
#create matrix of community variables
com.matrix<-insects[c(8:32)]
#individual curves for each trap (card) type
new.com.matrix<-new[c(8:32)]
new_curve<-accumresult(new.com.matrix, method = "exact", permutations = 1000)
old.com.matrix<-old[c(8:32)]
old_curve<-accumresult(old.com.matrix, method = "exact", permutations = 1000)
#calculates species richness for each sample
specnumber(com.matrix) #ranges from 1 to 8?
#calculates species richness by treatment (CARD)
specnumber(com.matrix, groups = insects$CARD) #jar=26; pitfall=21; ramp=35; sticky=31
#total richness and jackknife
rich <- diversityresult(com.matrix, y=NULL, index = "richness")
rich # 39
j1 <- diversityresult(com.matrix, y=NULL, index = "jack1")
j1 # 43.969697
#calculates species richness by treatment (CARD)
specnumber(com.matrix, groups = insects$CARD) #new=21; sticky=21
#total richness and jackknife
rich <- diversityresult(com.matrix, y=NULL, index = "richness")
rich # 21
j1 <- diversityresult(com.matrix, y=NULL, index = "jack1")
j1 # 21
#100%
j2 <- diversityresult(com.matrix, y=NULL, index = "jack2")
j2 # 44.98167
#new jackknife; richness = 26
j1.new <- diversityresult(new.com.matrix, y=NULL, index = "jack1")
j1.new # 32.833333
#new jackknife; richness = 26
j1.new <- diversityresult(new.com.matrix, y=NULL, index = "jack1")
j1.new # 21.998366
#79%
j2.new <- diversityresult(new.com.matrix, y=NULL, index = "jack2")
j2.new # 35.783391
#old jackknife; richness = 21
j1.old <- diversityresult(old.com.matrix, y=NULL, index = "jack1")
j1.old # 24.897436
#old jackknife; richness = 21
j1.old <- diversityresult(old.com.matrix, y=NULL, index = "jack1")
j1.old # 21
#100%
j2.old <- diversityresult(old.com.matrix, y=NULL, index = "jack2")
j2.old # 25.921053
#BiodiversityR::accumcomp
Accum.1_functional <- accumcomp(com.matrix, y=env.matrix, factor='CARD',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00"))+
scale_shape_manual(values=c(19,17))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "CARD", shape = "CARD")
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00"))+
scale_shape_manual(values=c(19,17))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "CARD", shape = "CARD")
functional_accum
accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00"))+
scale_shape_manual(values=c(19,17))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "Richness", colour = "CARD", shape = "CARD")
accum
pdf("accumulation curve.pdf", height=6, width=8) #height and width in inches
accum
dev.off()
#bring in final data file of everything combined
#LTER (2021_LTER_cumulative 3.0) + Bahlai (2021_Bahlai_reordered)
combined <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
combined$week <- as.character(combined$week)
#change CARD, TREAT, REP, and STATION to factor
combined$CARD <- as.factor(combined$CARD)
combined$TREAT <- as.factor(combined$TREAT)
combined$REP <- as.factor(combined$REP)
combined$STATION <- as.factor(combined$STATION)
str(combined)
summary(combined)
View(combined)
#Melt into long format to pool across reps
library(dplyr)
lb_rep<-aggregate(data=combined, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, FUN=sum)
#need SumOfADULTS column
sum <- rowSums(combined[,6:30])
combined$SumOfADULTS <- sum
#Melt into long format to pool across reps
library (reshape2)
long <- melt(combined)
View(long)
long <- melt(combined, id.vars = c("time", "treatment"))
long <- melt(combined, variable.name = "SPID", value.name = "SumOfADULTS")
insects<-aggregate(data=combined.long, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, FUN=sum)
combined.long <- melt(combined, variable.name = "SPID", value.name = "SumOfADULTS")
insects<-aggregate(data=combined.long, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, FUN=sum)
library(dplyr)
combined.long <- melt(combined, variable.name = "SPID", value.name = "SumOfADULTS")
insects<-aggregate(data=combined.long, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, FUN=sum)
insects<-aggregate(data=combined.long, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, fun.aggregate=sum)
insects<-aggregate(data=combined.long, SumOfADULTS~ week+TREAT+REP+STATION+CARD+SPID, fun.aggregate=sum)
combined.long <- melt(combined, variable.name = "SPID", value.name = "SumOfADULTS")
View(combined.long)
insects<-aggregate(data=combined.long, week+TREAT+REP+STATION+CARD+SPID ~ SumOfADULTS, fun.aggregate=sum, na.rm = TRUE)
insects<-aggregate(data=combined.long, week+TREAT+REP+STATION+CARD+SPID ~ SumOfADULTS, fun.aggregate=sum)
insects<-aggregate(data=combined.long, week+TREAT+REP+STATION+CARD+SPID ~ SumOfADULTS, FUN = sum)
insects<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN = sum)
combined <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
combined$week <- as.character(combined$week)
#change CARD, TREAT, REP, and STATION to factor
combined$CARD <- as.factor(combined$CARD)
combined$TREAT <- as.factor(combined$TREAT)
combined$REP <- as.factor(combined$REP)
combined$STATION <- as.factor(combined$STATION)
str(combined)
summary(combined)
#Melt into long format to pool across reps
library (reshape2)
library(dplyr)
combined.long <- melt(combined, variable.name = "SPID", value.name = "SumOfADULTS")
insects<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN = sum)
insects<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN = sum)
insects_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN=length)
View(insects_N)
#change variable name to reflect that it's number of traps
insects_N<-rename(insects_N, TRAPS=SumOfADULTS)
View(insects_N)
combined.long <- melt(combined, id.vars = c("week", "TREAT", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
View(combined.long)
combined.long <- melt(combined, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
insects<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN = sum)
insects_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+REP+STATION+CARD+SPID, FUN=length)
View(insects_N)
insects_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_N<-rename(insects_N, TRAPS=SumOfADULTS)
View(insects_N)
insects<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
#bring in final data file of everything combined
#LTER (2021_LTER_cumulative 3.0) + Bahlai (2021_Bahlai_reordered)
combined <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
str(combined)
combined$CARD <- as.factor(combined$CARD)
combined$TREAT <- as.factor(combined$TREAT)
combined$REP <- as.factor(combined$REP)
combined$STATION <- as.factor(combined$STATION)
str(combined)
summary(combined)
#Melt into long format to pool across reps
library (reshape2)
combined.long <- melt(combined, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
insects_rep<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N<-aggregate(data=combined.long, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)

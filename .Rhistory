View(insects_rep20)
View(insects_rep_N20)
View(insects_rep20)
#change variable name to reflect that it's number of traps
insects_rep_N20<-rename(insects_rep_N20, TRAPS=SumOfADULTS)
View(insects_rep_N20)
View(insects_rep20)
View(insects_rep_N20)
#null out SPID column
insects_rep_N20$SPID<-NULL
View(insects_rep_N20)
#create new dataframe that's just the number of traps
insects_traps20<-insects_rep_N20[!duplicated(insects_rep_N20), ]
View(insects_traps20)
View(insects_rep_N20)
View(insects_traps20)
View(insects_rep20)
#pool across reps and put back into wide format
insect20 <-dcast(insects_rep20, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
View(insects_rep20)
View(insect20)
#merge "traps" with "insects"
insects20 <- merge(insect20, insects_traps20, all.x=TRUE)
View(insects20)
View(insects20)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects20, file="2020_LTER_for_analyses.csv", row.names=FALSE)
#bring in final data file of everything combined
#LTER (2021_LTER_final) + Bahlai (2021_Bahlai_reordered)
combined21 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTERandBahlai.csv", na.strings = NULL)
#change week to characters
combined21$week <- as.character(combined21$week)
#change CARD, TREAT, REP, and STATION to factor
combined21$CARD <- as.factor(combined21$CARD)
combined21$TREAT <- as.factor(combined21$TREAT)
combined21$REP <- as.factor(combined21$REP)
combined21$STATION <- as.factor(combined21$STATION)
str(combined21)
summary(combined21)
#remove rows with NAs (missing data from either LTER or Bahlai)
combined.na21 <- na.omit(combined21)
#Melt into long format to pool across reps
library (reshape2)
combined.long21 <- melt(combined.na21, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep21<-aggregate(data=combined.long21, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N21<-aggregate(data=combined.long21, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N21<-rename(insects_rep_N21, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N21$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps21<-insects_rep_N21[!duplicated(insects_rep_N21), ]
#pool across reps and put back into wide format
insect21 <-dcast(insects_rep21, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects21 <- merge(insect21, insects_traps21, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects21, file="2021_LTER_for_analyses.csv", row.names=FALSE)
#okay not quite done
#bring in final data file
combined22 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_final.csv", na.strings = NULL)
#change week to characters
combined22$week <- as.character(combined22$week)
#change CARD, TREAT, REP, and STATION to factor
combined22$CARD <- as.factor(combined22$CARD)
combined22$TREAT <- as.factor(combined22$TREAT)
combined22$REP <- as.factor(combined22$REP)
combined22$STATION <- as.factor(combined22$STATION)
str(combined22)
summary(combined20)
#remove rows with NAs
combined.na22 <- na.omit(combined22)
#Melt into long format to pool across reps
library (reshape2)
combined.long22 <- melt(combined.na22, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep22<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N22<-aggregate(data=combined.long20, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N22<-rename(insects_rep_N22, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N22$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps22<-insects_rep_N22[!duplicated(insects_rep_N22), ]
#pool across reps and put back into wide format
insect22 <-dcast(insects_rep22, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects22 <- merge(insect22, insects_traps22, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects22, file="2022_LTER_for_analyses.csv", row.names=FALSE)
str(combined22)
combined22 <- read.csv ("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_final.csv", na.strings = NULL)
#change week to characters
combined22$week <- as.character(combined22$week)
#change CARD, TREAT, REP, and STATION to factor
combined22$CARD <- as.factor(combined22$CARD)
combined22$TREAT <- as.factor(combined22$TREAT)
combined22$REP <- as.factor(combined22$REP)
combined22$STATION <- as.factor(combined22$STATION)
str(combined22)
summary(combined22)
#remove rows with NAs
combined.na22 <- na.omit(combined22)
combined.long22 <- melt(combined.na22, id.vars = c("week", "TREAT", "REP", "STATION", "CARD"),
variable.name = "SPID", value.name = "SumOfADULTS")
library(dplyr)
insects_rep22<-aggregate(data=combined.long22, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN = sum)
insects_rep_N22<-aggregate(data=combined.long22, SumOfADULTS~week+TREAT+STATION+CARD+SPID, FUN=length)
#change variable name to reflect that it's number of traps
insects_rep_N22<-rename(insects_rep_N22, TRAPS=SumOfADULTS)
#null out SPID column
insects_rep_N22$SPID<-NULL
#create new dataframe that's just the number of traps
insects_traps22<-insects_rep_N22[!duplicated(insects_rep_N22), ]
#pool across reps and put back into wide format
insect22 <-dcast(insects_rep22, week+TREAT+STATION+CARD~SPID,
value.var ="SumOfADULTS",  sum)
#merge "traps" with "insects"
insects22 <- merge(insect22, insects_traps22, all.x=TRUE)
#print data into ACTUAL FINAL csv file to use for analyses
write.csv(insects22, file="2022_LTER_for_analyses.csv", row.names=FALSE)
#bring in data
insects20 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_for_analyses.csv", na.strings = NULL)
str(insects20)
#change week to characters
insects20$week <- as.character(insects20$week)
#change CARD, TREAT, REP, and STATION to factor
insects20$CARD <- as.factor(insects20$CARD)
insects20$TREAT <- as.factor(insects20$TREAT)
insects20$REP <- as.factor(cinsects20$REP)
insects20$STATION <- as.factor(insects20$STATION)
str(insects20)
insects20$REP <- as.factor(insects20$REP)
insects20$REP <- as.factor(insects20$REP)
#bring in data
insects20 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2020_LTER_for_analyses.csv", na.strings = NULL)
View(insects20)
insects20$week <- as.character(insects20$week)
#change CARD, TREAT, REP, and STATION to factor
insects20$CARD <- as.factor(insects20$CARD)
insects20$TREAT <- as.factor(insects20$TREAT)
insects20$STATION <- as.factor(insects20$STATION)
str(insects20)
summary(insects20)
#bring in data
insects21 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects21$week <- as.character(insects21$week)
#change CARD, TREAT, and STATION to factor
insects21$CARD <- as.factor(insects21$CARD)
insects21$TREAT <- as.factor(insects21$TREAT)
insects21$STATION <- as.factor(insects21$STATION)
str(insects21)
summary(insects21)
#bring in data
insects22 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2022_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects22$week <- as.character(insects22$week)
#change CARD, TREAT, and STATION to factor
insects22$CARD <- as.factor(insects22$CARD)
insects22$TREAT <- as.factor(insects22$TREAT)
insects22$STATION <- as.factor(insects22$STATION)
str(insects22)
summary(insects22)
#bring in data
insects21 <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/2021_LTER_for_analyses.csv", na.strings = NULL)
insects21$week <- as.character(insects21$week)
#change CARD, TREAT, and STATION to factor
insects21$CARD <- as.factor(insects21$CARD)
insects21$TREAT <- as.factor(insects21$TREAT)
insects21$STATION <- as.factor(insects21$STATION)
str(insects21)
summary(insects21)
#NMDS of insect community between card types
library (vegan)
View(insects21)
#Create matrix of environmental variables
env.matrix<-insects21[c(1:4,30)]
#create matrix of community variables
com.matrix<-insects21[c(5:29)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24 -- no convergence
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New")
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old"),pch=19, col="#E69F00")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73"), cex=1.2, legend=c("Old cards", "New cards"))
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis2(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$CARD))
#This is really doing the same thing
library(pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
install.packages("pairwiseAdonis")
pairwise.adonis(com.matrix, env.matrix$CARD)
#subset by card type
new <- insects[which(insects21$CARD=="New21"),]
old <- insects[which(insects21$CARD=="Old21"),]
#subset by card type
new <- insects21[which(insects21$CARD=="New21"),]
old <- insects21[which(insects21$CARD=="Old21"),]
#calculate mean and SE richness and abundance of each card pooled by rep
insects.abun <- rowSums(new[,5:29])
new$abundance <- insects.abun
insects.rowsums <- rowSums(new[,5:29]>0)
new$richness <- insects.rowsums
insects.abun <- rowSums(old[,5:29])
old$abundance <- insects.abun
insects.rowsums <- rowSums(old[,5:29]>0)
old$richness <- insects.rowsums
mean(new$abundance) #220.84
sd(new$abundance)/sqrt(10) #67.86
mean(new$richness) #6.65
sd(new$richness)/sqrt(10) #0.68
mean(old$abundance) #187.85
sd(old$abundance)/sqrt(10) #57.00
mean(old$richness) #6.64
sd(old$richness)/sqrt(10) #0.73
#counts from each individual card -- calculated before cards were pooled across reps
mean(new$abundance) #43.41
#To obtain richness counts
insects.rowsums <- rowSums(insects[,5:29]>0)
insects$richness <- insects.rowsums
#To obtain richness counts
insects.rowsums <- rowSums(insects21[,5:29]>0)
insects21$richness <- insects.rowsums
#To obtain abundance counts
insects.abun <- rowSums(insects21[,5:29])
insects21$abundance <- insects.abun
#calculate Shannon diversity
diversity <-diversity(insects21[,5:29])
insects21$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects21[,5:29]))
insects21$evenness <- evenness
###
#Generalized linear models
library(lme4)
library(lmerTest) #to obtain p values
library (car) #Anova (needed because of negative binomial)  ##if we don't use neg binomial switch to "anova"
library (nortest)
library(bbmle)
library(DHARMa)
library(ggplot2)
library(sjPlot)
library (jtools)
library(interactions)
library(emmeans)
#bring in data
insects_all <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/all%20years_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects_all$week <- as.character(insects_all$week)
#change CARD, TREAT, and STATION to factor
insects_all$CARD <- as.factor(insects_all$CARD)
insects_all$TREAT <- as.factor(insects_all$TREAT)
insects_all$STATION <- as.factor(insects_all$STATION)
str(insects_all)
summary(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,30)]
View(insects21)
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.24
View(insects_all)
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#Create matrix of environmental variables
env.matrix<-insects21[c(1:4,30)]
#create matrix of community variables
com.matrix<-insects21[c(5:29)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#Create matrix of environmental variables
env.matrix<-insects_all[c(2:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(insects_all)
#Create matrix of environmental variables
env.matrix<-insects_all[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all[c(6:9,11:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
View(com.matrix)
#first need to get rid of any rows that sum to zero
insects.abun <- rowSums(insects_all[,5:23])
insects_all$abundance <- insects.abun
View(insects_all)
#then remove rows = zero
insects_all[rowSums(insects_all[])>0,]
#then remove rows = zero
insects_all[rowSums(insects_all[,5:23])>0,]
View(insects_all)
insects_all[rowSums(abs(insects_all)) != 0,]
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,5:23])
insects_all$abundance <- insects.abun
View(insects_all)
#then remove rows = zero
insects_all[rowSums(insects_all[25])>0,]
View(insects_all)
summary(insects_all)
str(insects_all)
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[25])>0,]
View(insects_all_nonzero)
str(insects_all_nonzero)
#Create matrix of environmental variables
env.matrix<-insects_all_nonzero[c(1:4,24)]
#create matrix of community variables
com.matrix<-insects_all_nonzero[c(5:23)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=300) #stress=.24
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100) #stress=.06 -- no convergence
NMDS
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis2(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#bootstrapping and testing for differences between the groups (cards)
fit<-adonis2(com.matrix ~ CARD, data = env.matrix, permutations = 999, method="bray")
fit
#NMDS visualization
plot(NMDS, disp='sites', type="n")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
#NMDS visualization
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
#NMDS visualization
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARD, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARD=="Old20"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARD=="New22"), pch=17, col="#009E73")
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library (pairwiseAdonis)
pairwise.adonis(com.matrix, env.matrix$CARD)
insects_all <- read.csv("https://raw.githubusercontent.com/BahlaiLab/KBS_sticky-cards/main/all%20years_LTER_for_analyses.csv", na.strings = NULL)
#change week to characters
insects_all$week <- as.character(insects_all$week)
#change CARD, TREAT, and STATION to factor
insects_all$CARDYEAR <- as.factor(insects_all$CARDYEAR)
insects_all$CARD <- as.factor(insects_all$CARD)
insects_all$TREAT <- as.factor(insects_all$TREAT)
insects_all$STATION <- as.factor(insects_all$STATION)
str(insects_all)
summary(insects_all)
library (vegan)
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[26])>0,]
str(insects_all_nonzero)
#NMDS of insect community between card types
library (vegan)
#first need to get rid of any rows that sum to zero
#so sum (aka get abundance per row)
insects.abun <- rowSums(insects_all[,6:24])
insects_all$abundance <- insects.abun
#then remove rows = zero
insects_all_nonzero <- insects_all[rowSums(insects_all[26])>0,]
str(insects_all_nonzero)
#Create matrix of environmental variables
env.matrix<-insects_all_nonzero[c(1:5,25)]
#create matrix of community variables
com.matrix<-insects_all_nonzero[c(6:24)]
pairwise.adonis(com.matrix, env.matrix$CARD)
pairwise.adonis(com.matrix, env.matrix$CARDYEAR)
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=TRUE, trymax=100) #stress=.20 (.198)
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=19, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=17, col="#00c690")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
NMDS
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=19, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=17, col="#00c690")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73", "#ffba21","#00c690"), cex=1.2, legend=c("2021 Old cards", "2021 New cards", "2020 Old cards", "2022 New cards"))
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=16, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=10, col="#00c690")
#add legend
legend(1.315,1.684, title=NULL, pch=c(19,17), col=c("#E69F00","#009E73", "#ffba21","#00c690"), cex=1.2, legend=c("2021 Old cards", "2021 New cards", "2020 Old cards", "2022 New cards"))
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
title(main="", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#ffba21",kind="sd", conf=0.95, label=FALSE, show.groups = "Old20")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#00c690",kind="sd", conf=0.95, label=FALSE, show.groups = "New22")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "Old21")
ordiellipse(NMDS, env.matrix$CARDYEAR, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "New21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=10, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=12, col="#00c690")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=12, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=15, col="#00c690")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
#NMDS visualization with trap types by year
plot(NMDS, disp='sites', type="n")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old21"),pch=20, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New21"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="Old20"),pch=18, col="#ffba21")
points(NMDS, display="sites", select=which(env.matrix$CARDYEAR=="New22"), pch=15, col="#00c690")
